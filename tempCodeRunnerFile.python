# def missing_numbers(numbers,n):
#     expected_sum=n*(n+1)//2
#     actual_sum=sum(numbers)
#     return expected_sum-actual_sum
# # missing_num=missing_numbers([1,2,4,5,6],6)
# print(missing_numbers([1,2,4,5,6],6))



# def count_vowels(s):
#     vowels="aeiouAEIOU"
#     count=0
#     if vowels in s:
#         count=count+1
# count_number=count_vowels("PriyankaEngineer")
# print(f'Number of vowels is {count_number}')

# def remove_duplicate_items(lst):
#     unique_list=[]
#     for i in lst:
#         if i not in unique_list:
#             unique_list.append(i)
#     return unique_list
# rdi=remove_duplicate_items([1,2,2,3,4,4,6,6,1,7,8,9])
# print(rdi)

# def non_repeated(s):
#     for char in s:
#         if s.count(char)==1:
#             return char
#     return None
# print(non_repeated("aabbccdd"))

# def fizz_buzz(n): 
#     result = []
#     for i in range(1, n + 1):
#         if i % 3 == 0 and i % 5 == 0:
#             result.append("FizzBuzz")
#         elif i % 3 == 0:
#             result.append("Fizz")
#         elif i % 5 == 0:
#             result.append("Buzz")
#         else:
#             result.append(str(i))
#     return result
# print(fizz_buzz(9))

# def merge_sorted_lists(list1,list2):
#     result=[]
#     i,j=0,0
#     while i<len(list1) and j<len(list2):
#         if list1[i]<list2[j]:
#             result.append(list1[i])
#             i+=1
#         else:
#             result.append(list2[j])
#             j+=1
#     result.extend(list1[i:])
#     result.extend(list2[j:])
#     return result

# print(merge_sorted_lists([1,3,5],[2,4,6]))

# def binary_search(arr,target):          #arr = [10,20,30]            target = int value to be search from arr list
#     left,right=0,len(arr)-1             #left = 1st index of arr     right = last index of arr
#     while left <= right:                #The loop continues as long as left is less than or equal to right
#         mid = (left + right) //2
#         if arr[mid] == target:
#             return mid
#         elif arr[mid] < target:
#             left = mid + 1
#         else:
#             right = mid - 1
#     return -1
# print(binary_search([10,20,30,40],60))


string=input("enter a string:")
reverse=" "
for i in string:
    reverse=reverse+i
print(reverse)